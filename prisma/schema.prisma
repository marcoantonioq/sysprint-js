generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  name            String?
  username        String
  password        String
  email           String?  @unique
  groups          String?
  adress          String?
  status          Boolean  @default(true)
  quota           Int?
  month_count     Int?
  thumbnailphoto  String?
  job_count       Int?
  printers        String?
  default_printer String?
  modified        DateTime @updatedAt
  created         DateTime @default(now())
  jobs            Job[]
}

model Printer {
  id           Int      @id @default(autoincrement())
  allow        Boolean  @default(true)
  name         String   @unique
  path         String   @unique
  localization String?
  groups       String?
  icon         String?
  default      Boolean  @default(false)
  status       Boolean  @default(true)
  month_count  Int      @default(0)
  quota_period Int      @default(0)
  page_limite  Int      @default(0)
  k_limit      Int      @default(0)
  modified     DateTime @updatedAt
  created      DateTime @default(now())
  jobs         Job[]
}

model Job {
  id          Int      @id @default(autoincrement())
  jobid       Int?
  userid      Int
  printerid   Int
  pages       Int?
  host        String?
  filename    String
  size        Int?
  encoding    String?
  path        String
  mimetype    String
  md5         String?
  params      String?
  status      String?
  complete    Boolean? @default(false)
  description String?
  modified    DateTime @updatedAt
  created     DateTime @default(now())
  user        User?    @relation(fields: [userid], references: [id])
  printer     Printer? @relation(fields: [printerid], references: [id])

  @@index([userid, printerid])
}

model Setting {
  group  String
  key    String
  value  String
  enable Boolean @default(true)

  @@id([group, key], name: "setting")
}

model Logger {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  level       Int
  created     DateTime @default(now())
}
